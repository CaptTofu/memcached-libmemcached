General:

Document all typedef actions on input and output

Structure:
    Aim to be at least thread-safe and ideally thread-hot.
    Add MEMCACHED_BEHAVIOR_USER_DATA structure
        will also hold PrintError & RaiseError flags
    Resolve uint64_t issues (esp re cas)

Tests:

CPAN:
    Find out how to get more info into a cpan-testers NA report.

Compatibility:
    Use flags field in a way compatible with Cache::Memcached?
        use constant F_STORABLE => 1;
        use constant F_COMPRESS => 2;
       +use constant F_UTF8     => 4; <= new patch from sugi@nemui.org
    We should certainly support UTF8 in some way and using the same flag bit is sane
    (will reduce migration problems).
    Should we support automatic storable/compress or leave those to higher level code?
    Could support generic get & set key and get & set value callback hooks.
    Like BerkeleyDB filters: http://search.cpan.org/~pmqs/BerkeleyDB/BerkeleyDB.pod#DBM_Filters
    Write Cache::Memcached emulation and run its test suite.

Consider  memcached_fetch_execute API
    memcached_fetch_execute(memcached_st *ptr,
+                          unsigned int (*callback[])(memcached_st *ptr, memcached_result_st *result, void *context),
+                          void *context,
+                          unsigned int number_of_callbacks
+                         )

